void	philo_eat(t_philo *philo)
{
	if(philo->info->fork_status[philo->r_fork] == FREE)
	{
		pthread_mutex_lock(&philo->info->forks[philo->r_fork]);
		pthread_mutex_lock(&philo->info->forks[philo->l_fork]);
		philo->info->fork_status[philo->r_fork] = LOCK;
		philo->info->fork_status[philo->l_fork] = LOCK;
		print_philo_status(philo, "has taken a fork");
		print_philo_status(philo, "has taken a fork");
		print_philo_status(philo, "is eating");
		usleep((philo->info->time_to_eat * 1000));
		philo->info->fork_status[philo->r_fork] = FREE;
		philo->info->fork_status[philo->l_fork] = FREE;
		pthread_mutex_unlock(&philo->info->forks[philo->r_fork]);
		pthread_mutex_unlock(&philo->info->forks[philo->l_fork]);
	}
}
